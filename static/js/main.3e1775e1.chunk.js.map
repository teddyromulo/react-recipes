{"version":3,"sources":["tempList.js","components/Recipe.js","components/RecipeSearch.js","components/RecipeList.js","tempDetails.js","components/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","Recipe","_this$props$recipe","this","props","recipe","handleDetailsPage","react_default","a","createElement","className","src","style","height","cursor","alt","onClick","type","href","target","rel","Component","RecipeSearch","_this$props","value","handleChange","handleSubmit","Fragment","onSubmit","htmlFor","name","placeholder","onChange","RecipeList","error","RecipeSearch_RecipeSearch","map","Recipe_Recipe","key","f2f_url","ingredients","publisher_url","RecipeDetails","state","id","url","fetch","data","json","jsonData","setState","console","log","_context","t0","_this$state$recipe","handleListPage","item","index","App","base_url","details_id","pageIndex","searchText","query","_this","e","preventDefault","_this$state","concat","search","getRecipes","length","RecipeList_RecipeList","RecipeDetails_RecipeDetails","displayPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e1775e1.chunk.js","sourcesContent":["export const recipes = [\n    {\n      recipe_id: 35382,\n      image_url:\n        \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n      title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n      publisher: \"Closet Cooking\",\n      source_url:\n        \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n    },\n    {\n      recipe_id: 35383,\n      image_url:\n        \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n      title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n      publisher: \"Closet Cooking\",\n      source_url:\n        \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n    },\n    {\n      recipe_id: 35384,\n      image_url:\n        \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n      title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n      publisher: \"Closet Cooking\",\n      source_url:\n        \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n    }\n  ];","import React, { Component } from 'react'\n\nexport default class Recipe extends Component {\n    render() {\n        const {\n            image_url,\n            title,\n            source_url,\n            publisher,\n            recipe_id\n        } = this.props.recipe;\n\n        const {handleDetailsPage} = this.props;\n       \n        return (\n            <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\n                <div className=\"card\">\n                    <img src={image_url} \n                    className=\"img-card-top\"\n                    style={{height:\"14rem\", cursor:\"pointer\"}}\n                    alt=\"recipe\" \n                    onClick={() => handleDetailsPage(0, recipe_id)}/>\n                    <div className=\"card-body text-capitalize\">\n                        <h6>{title}</h6>\n                        <h6 className=\"text-warning text-slanted\">\n                            provided by {publisher}\n                        </h6>\n                    </div>\n                    <div className=\"card-footer\">\n                        <button type=\"button\"\n                        className=\"btn btn-primary\" \n                        onClick={() => handleDetailsPage(0, recipe_id)}>details</button>\n                        <a href={source_url} \n                        className=\"btn btn-success mx-2 text-capitalized\"\n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\" \n                        >recipe url</a>\n                    </div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class RecipeSearch extends Component {\n    render() {\n\n        const {value, handleChange, handleSubmit} = this.props;\n        return (\n            <React.Fragment>    \n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\n                            <h1 className=\"text-slanted text-capitalize\">\n                                search for recipe with{\" \"} <strong className=\"text-danger\">Food2Fork</strong>\n                            </h1>\n                            <form className=\"mt-4\" onSubmit={handleSubmit}>\n                                <label htmlFor=\"search\" className=\"text-capitalize\">\n                                    typer recipes separated by comma\n                                </label>\n                                <div className=\"input-group\">\n                                    <input \n                                        type=\"text\" \n                                        name=\"search\" \n                                        placeholder=\"chicken,onions,carrots\" \n                                        className=\"form-control\"\n                                        value={value} \n                                        onChange={handleChange}\n                                         />\n                                    <div className=\"input-group-append\">\n                                        <button type=\"submit\" className=\"input-group-text bg-primary text-white\">\n                                            <i className=\"fa fa-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Recipe from './Recipe';\nimport RecipeSearch from './RecipeSearch';\n\nexport default class RecipeList extends Component {\n    render() {\n\n        const {\n                recipes, \n                handleDetailsPage, \n                value, \n                handleChange, \n                handleSubmit, \n                error\n            } = this.props; // get recipes from props\n\n        return (\n            <React.Fragment>\n                <RecipeSearch \n                    value={value} \n                    handleChange={handleChange} \n                    handleSubmit={handleSubmit}\n                     />\n                <div className=\"container my-5\"> \n                {/* title */}\n                <div className=\"row\">\n                    <div className=\"col-10 mx-auto col-md-6 text-center text-uppercase mb-3\">\n                    <h1 className=\"text-slanted\">recipe list</h1>\n                    </div>\n                </div>\n                {/* end of title */}\n                \n                <div className=\"row\">\n                { error? ( // check error or display results\n                            <h2 className=\"text-danger text-center\">{error}</h2>\n                        ) : (\n                            recipes.map( recipe => {\n                                return(\n                                    <Recipe \n                                    key = {recipe.recipe_id} \n                                    recipe={recipe} \n                                    handleDetailsPage={handleDetailsPage}/>\n                                )\n                            })\n                    )\n                }\n                </div>\n                </div>\n               \n            \n            </React.Fragment>\n        )\n    }\n}\n","export const recipe = {\n    f2f_url: \"http://food2fork.com/view/35382\",\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    ingredients: [\n      \"2 jalapeno peppers, cut in half lengthwise and seeded\",\n      \"2 slices sour dough bread\",\n      \"1 tablespoon butter, room temperature\",\n      \"2 tablespoons cream cheese, room temperature\",\n      \"1/2 cup jack and cheddar cheese, shredded\",\n      \"1 tablespoon tortilla chips, crumbled\"\n    ],\n    publisher: \"Closet Cooking\",\n    publisher_url: \"http://closetcooking.com\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\"\n  };","import React, { Component } from 'react'\nimport {recipe} from '../tempDetails';\n\nexport default class RecipeDetails extends Component {\n\n    // OPTION 1 OF USING ASYNC\n    // constructor(props){\n    //     super(props);\n\n    //     this.state = {\n    //         recipe:recipe,\n    //         url:`https://www.food2fork.com/api/get?key=4e9c0bb075458fb27055cfe1c87ddb39&rId=${this.props.id}`\n    //     }\n\n    // }\n\n    // async componentDidMount(){\n    //     try{\n    //         const data = await fetch(this.state.url);\n    //         const jsonData = await data.json();\n    //         this.setState({recipe:jsonData.recipe}); // key is recipes: on json response\n    //     }catch(error){\n    //         console.log(error);\n    //     }\n    // }\n\n    // OPTION 2 OF USING ASYNC, USING CALLBACK FUNCTION AFTER SET STATE\n    state = {\n        recipe:recipe\n    }\n\n    async componentDidMount(){\n        const id = this.props.id // change back to this.props.id\n        const url = `https://www.food2fork.com/api/get?key=4e9c0bb075458fb27055cfe1c87ddb39&rId=${id}`\n\n        try{\n            const data = await fetch(url);\n            const jsonData = await data.json();\n            this.setState((state, props) => {\n                return {\n                    recipe:jsonData.recipe\n                }\n            }, () => {} ); // callback to retrieve new state, props values\n        }catch(error){\n            console.log(error);\n        }\n    }\n\n\n    render() {\n        //console.log(this.state.recipe);\n        const {\n            image_url,\n            publisher,\n            publisher_url,\n            source_url,\n            title,\n            ingredients\n        } = this.state.recipe;\n\n        const {handleListPage} = this.props; // function is destructured from props. see onClick for usage.\n\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-10 mx-auto col-md-6 my-3\">\n                    <button \n                        type=\"button\" \n                        className=\"btn btn-warning mb-5 text-capitalized\"\n                        onClick = {()=>handleListPage(1)}>\n                        back to recipe list\n                    </button>\n                    <img src={image_url} className=\"d-block w-100\" alt=\"recipe\" />\n                    </div>\n                    <div className=\"col-10 mx-auto col-md-6 my-3\">\n                        <h6 className=\"text-uppercase\">{title}</h6>\n                        <h6 className=\"text-warning text-capitalize text-slanted\">\n                            provided by {publisher}</h6>\n                        <a href={publisher_url}\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\" \n                           className=\"btn btn-primary mt-2 text-capitalize\"\n                            >publisher webpage</a>\n                        <a href={source_url}\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\" \n                           className=\"btn btn-success mx-3 mt-2 text-capitalize\"\n                            >recipe url</a> \n                        <ul className=\"list-group mt-4\">\n                            <h2 className=\"mt-3 mb-4\">ingredients</h2>\n                            {\n                                ingredients.map((item, index)=>{\n                                    return(\n                                        <li key={index} className=\"list-group-item text-slanted\">\n                                            {item}\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n\n                    </div>\n                </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport {recipes} from './tempList';\nimport RecipeList from './components/RecipeList';\nimport RecipeDetails from './components/RecipeDetails';\n\n// https://www.food2fork.com/api/search?key=4e9c0bb075458fb27055cfe1c87ddb39\n\nclass App extends Component {\n\n  state = {\n    recipes:recipes,\n    url:\"https://www.food2fork.com/api/search?key=4e9c0bb075458fb27055cfe1c87ddb39\",\n    base_url:\"https://www.food2fork.com/api/search?key=4e9c0bb075458fb27055cfe1c87ddb39\",\n    details_id:35382,\n    pageIndex:1,\n    searchText:'',\n    query:'&q=',\n    error:''\n  }\n\n async getRecipes(){\n   try{\n     const data = await fetch(this.state.url);\n     const jsonData = await data.json();\n        if(jsonData.recipes.length===0){\n          this.setState(() => {\n            return {\n              error:'Sorry, no results were found'\n            }\n          })\n        }else{\n          this.setState(() => {\n            return { recipes:jsonData.recipes } // key is recipes: on json response\n          }); \n        }\n     \n   }catch(error){\n     console.log(error);\n   }\n  }\n\n  componentDidMount(){\n    this.getRecipes();\n  }\n\ndisplayPage(index){\n  switch(index) {\n    default:\n    case 1:\n      return <RecipeList \n                recipes={this.state.recipes} \n                handleDetailsPage={this.handleDetailsPage}\n                value={this.state.searchText} \n                handleChange = {this.handleChange} \n                handleSubmit = {this.handleSubmit}\n                error = {this.state.error}\n                 />\n    case 0:\n      return <RecipeDetails \n                id = {this.state.details_id} \n                handleListPage = {this.handleListPage}\n                 />  \n  }\n}\n\nhandleListPage = index => {\n  this.setState({\n    pageIndex:index\n  });\n}\n\nhandleDetailsPage = (index, id) => {\n  this.setState({\n    pageIndex:index,\n    details_id:id\n  });\n}\n\nhandleChange = (e) => {\n  this.setState({\n    searchText:e.target.value\n  },() => {\n      //console.log(this.state.searchText); // callback example\n    });\n}\n\nhandleSubmit = (e) => {\n  e.preventDefault();\n  const{base_url, query, searchText} = this.state;\n  this.setState(() => {\n    return {\n      url:`${base_url}${query}${searchText}`,\n      search:\"\" // reset value to empty\n    }\n  }, () => {\n    this.getRecipes();\n  });\n}\n\n  render(){\n    //console.log(this.state.recipes);\n    return (\n      <React.Fragment>  \n        {this.displayPage(this.state.pageIndex)}\n      </React.Fragment>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}